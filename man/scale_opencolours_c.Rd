% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_opencolours.R
\name{scale_opencolours_c}
\alias{scale_opencolours_c}
\title{Plotting with openair palettes in ggplot2}
\usage{
scale_opencolours_c(
  colours = "default",
  na_value = "grey50",
  aes = c("colour", "fill"),
  ...
)
}
\arguments{
\item{colours}{The openair colour scheme to use. See \code{\link[openair:openColours]{openair::openColours()}}
for more information.}

\item{na_value}{The aesthetic value to use for missing (NA) values. Defaults
to "grey50".}

\item{aes}{Character string or vector of character strings listing the
name(s) of the aesthetic(s) that this scale works with. The default,
\code{c("colour", "fill")}, applies colours to both the \code{colour} \emph{and} \code{fill}
aesthetics.}

\item{...}{Other arguments to pass to \code{\link[ggplot2:scale_gradient]{ggplot2::scale_color_gradientn()}}.}
}
\value{
A ggproto object defining a continuous colour scale for use with
\code{\link[ggplot2:ggplot]{ggplot2::ggplot()}}.
}
\description{
This is a convenient wrapper around \code{\link[ggplot2:scale_gradient]{ggplot2::scale_color_gradientn()}} and
\code{\link[openair:openColours]{openair::openColours()}} which creates colour gradients for \code{ggopenair}
plots, with helpful defaults.
}
\examples{
\dontrun{
gg_polar_plot(mydata, "nox") + scale_opencolours()
}

}
